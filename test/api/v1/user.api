syntax = "v1"

type userRequest {
    Name string `path:"name"`    // 姓名
    Age int `json:"age"`
    embed1 []Embed1 `json:"em1"` // xs
    embed2 Embed2 `json:"em2"`   // dsd
    map2 map[string]Value1 `json:"map2"`
}

type userResponse {
    Code int `json:"code"`
    Msg string `json:"msg"`
    embed1 []Embed1 `json:"em1"`
    embed2 Embed2 `json:"em2"`
    map1 map[string]string `json:"map1"` // test
    map2 map[string]Value1 `json:"map2"`
}

type Embed1 {
    foo int `json:"foo"`          // x
    Embed3 Embed3 `json:"embed3"` // esc234
}
type Embed2 {
    foo int `json:"foo"` // y
}

type Embed3 {
    foo int `json:"foo"` // Embed3
}



type Value1 {
    name string `json:"name"` // vads3
}


@server(
    jwt: Auth
    group: user
    middleware: someMiddleware
    prefix: /v1
    swtags: "用户相关"
)


service someapp {
	@doc "获取所有用户信息"
	@handler getUserList
	get /user (userRequest) returns (userResponse)

	@doc "获取用户信息"
	@handler getUser
	get /user/:id (userRequest) returns (userResponse)

	@doc "添加用户信息"
	@handler addUser
	post /user (userRequest) returns (userResponse)

	@doc "编辑用户信息"
	@handler editUser
	put /user/:id (userRequest) returns (userResponse)

}
